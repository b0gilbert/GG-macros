#pragma rtGlobals=1		// Use modern global access method.Menu "Graph"	SubMenu "Packages"		"Browse and Plot"	EndEndProc BrowseAndPlot()		DoWindow BrowsePlotPanel	if (V_flag == 0)		InitBrowsePlot()					// Some initialization		CreateBrowsePlotPanel()		// The interactive panel	else		DoWindow /F BrowsePlotPanel	endifEndFunction InitBrowsePlot()	NewDataFolder/O/S root:Packages	NewDataFolder/O/S root:Packages:Plotting			// MAKE WAVES THAT LIST THE SELECTED WAVES. These will be displayed in a ListBox		Make /O/T/N=0 wAxisList, wDataList, wDataFolderList		Make /O/N=0 wDataSel,wDataFolderSel				// Global strings to select DATAFOLDER names		MakeStringIfNeeded("gIncDf1","")		MakeStringIfNeeded("gExcDf1","")		// Global strings to select DATA names		MakeStringIfNeeded("gSuffix","")		MakeStringIfNeeded("gIncText1","")		MakeStringIfNeeded("gIncText2","")		MakeStringIfNeeded("gExcText1","")		MakeStringIfNeeded("gExcText2","")		// globals for determining axis names		MakeVariableIfNeeded("gAxisFlag",3)		MakeStringIfNeeded("gAxisText1","")		MakeStringIfNeeded("gAxisText2","")		MakeStringIfNeeded("gAxisManText1","")		MakeStringIfNeeded("gAxisManText2","")		// Plotting variables		MakeVariableIfNeeded("gFolderFlag",0)		MakeVariableIfNeeded("gLogX",0)		MakeVariableIfNeeded("gLogY",0)			SetDataFolder root:End// *************************************************************************// ***********				DOING THINGS TO SELECTED DATA FILES// *************************************************************************Function BrowsePlotPanelButtons(ctrlname):ButtonControl	String ctrlname	String BrowsePlotFolder = "root:Packages:Plotting"	NVAR gAxisFlag				= $(BrowsePlotFolder+":gAxisFlag")	SVAR gAxisText1				= $(BrowsePlotFolder+":gAxisText1")	SVAR gAxisText2				= $(BrowsePlotFolder+":gAxisText2")		WAVE /T wDataList			= $(BrowsePlotFolder+":wDataList")	WAVE /T wAxisList			= $(BrowsePlotFolder+":wAxisList")	WAVE wDataSel				= $(BrowsePlotFolder+":wDataSel")	WAVE /T wDataFolderList		= $(BrowsePlotFolder+":wDataFolderList")	WAVE wDataFolderSel			= $(BrowsePlotFolder+":wDataFolderSel")		Variable AllFlag = 0		if (StrSearch(ctrlname,"All",0) > -1)		AllFlag = 1	endif		if (StrSearch(ctrlname,"Save",0) > -1)		BESTSaveData(wDataSel,wAxisList,wDataList,wDataFolderList,AllFlag)		elseif (StrSearch(ctrlname,"Plot",0) > -1)		BESTPlotData(wDataSel,wAxisList,wDataList,wDataFolderList,AllFlag,0)		ColorTraces("")		AddLegend()			elseif (StrSearch(ctrlname,"Histo",0) > -1)		BESTPlotData(wDataSel,wAxisList,wDataList,wDataFolderList,AllFlag,1)			elseif (StrSearch(ctrlname,"Edit",0) > -1)		BESTEditData(wDataSel,wAxisList,wDataList,wDataFolderList,AllFlag)		elseif (StrSearch(ctrlname,"Average",0) > -1)		BESTAvgData(wDataSel,wAxisList,wDataList,wDataFolderList,AllFlag)		elseif (StrSearch(ctrlname,"Adopt",0) > -1)		BESTAdoptData(wDataSel,wAxisList,wDataList,wDataFolderList,AllFlag,gAxisFlag,gAxisText1,gAxisText2)			endifEndFunction BESTPlotData(wDataSel,wAxisList,wDataList,wDataFolderList,PlotAllFlag,HistFlag)	Wave wDataSel	Wave /T wAxisList,wDataList,wDataFolderList	Variable PlotAllFlag, HistFlag		String BrowsePlotFolder = "root:Packages:Plotting"	NVAR gLogX 	= $(BrowsePlotFolder+":gLogX")	NVAR gLogY	= $(BrowsePlotFolder+":gLogY")		Variable i, DisplayFlag = 1	String AxisName, AxisAndFolderName, DataName, DataAndFolderName, PlotName		if ((sum(wDataSel) > 0) || (PlotAllFlag == 1))		for (i=0;i<numpnts(wDataSel);i+=1)//			if ((wDataSel[i] == 1) || (PlotAllFlag == 1))			if ((wDataSel[i]&2^0 != 0) || (wDataSel[i]&2^3 != 0) || PlotAllFlag)				// ALL spectra routines should move to this approach. 				DataName				= wDataList[i]				DataAndFolderName	=  CheckFolderColon(wDataFolderList[i]) + DataName								if (HistFlag == 1)					DataToHistogram($DataAndFolderName)				else									AxisName 				= wAxisList[i]					AxisAndFolderName	= CheckFolderColon(wDataFolderList[i]) + AxisName										if (DisplayFlag==1)						if (WaveExists($AxisAndFolderName) == 0)							Display /K=1/W=(525,44,1234,707)  $DataAndFolderName as "Plotted Data"						else							Display /K=1/W=(525,44,1234,707)  $DataAndFolderName vs $AxisAndFolderName as "Plotted Data"						endif						ModifyGraph log(bottom)=gLogX, log(left)=gLogY						DisplayFlag = 0					else						if (WaveExists($AxisAndFolderName) == 0)							AppendToGraph $DataAndFolderName						else							AppendToGraph $DataAndFolderName vs $AxisAndFolderName						endif					endif									endif			endif		endfor				if (HistFlag != 1)			PlotName = WinName(0,65)			CheckWindowPosition(PlotName,525,44,1234,707)			SetCommonPlotFormat(PlotName,"")		endif	endifEndFunction DataToHistogram(Data)	Wave Data		String DataName 		= NameOfWave(Data)	String FolderName 	= GetWavesDataFolder(Data,1)	print FolderName	String HistogramName = DataName+"_h"		Make /O/D/N=1 $(CheckFolderColon(FolderName) + HistogramName)	WAVE Histo = $(CheckFolderColon(FolderName) + HistogramName)		Histogram /B=4 Data, Histo		Display /K=1 Histo as ReplaceString("root:StrucSims:STRUCTURES:",FolderName,"")	ModifyGraph mode=6EndFunction BESTEditData(wDataSel,wAxisList,wDataList,wDataFolderList,EditAllFlag)	Wave wDataSel	Wave /T wAxisList,wDataList,wDataFolderList	Variable EditAllFlag		Variable i, DisplayFlag = 1	String AxisName, AxisAndFolderName, DataName, DataAndFolderName, PlotName		if ((sum(wDataSel) > 0) || (EditAllFlag == 1))		for (i=0;i<numpnts(wDataSel);i+=1)//			if ((wDataSel[i] == 1) || (EditAllFlag == 1))			if ((wDataSel[i]&2^0 != 0) || (wDataSel[i]&2^3 != 0) || EditAllFlag)				DataName				= wDataList[i]				DataAndFolderName	=  CheckFolderColon(wDataFolderList[i]) + DataName				AxisName 				= wAxisList[i]				AxisAndFolderName	= CheckFolderColon(wDataFolderList[i]) + AxisName								if (DisplayFlag==1)					if (WaveExists($AxisAndFolderName) == 0)						Edit /K=1/W=(525,44,1234,707)  $DataAndFolderName as "Selected Data"						Print " 	... The full path to the data:", DataAndFolderName					else						Edit /K=1/W=(525,44,1234,707)  $AxisAndFolderName, $DataAndFolderName,  as "Selected Data"						Print " 	... The full path to the axis:", AxisAndFolderName						Print " 	... The full path to the data:", DataAndFolderName					endif					DisplayFlag = 0				else					if (WaveExists($AxisAndFolderName) == 0)						AppendToTable $DataAndFolderName					else						AppendToTable $AxisAndFolderName, $DataAndFolderName					endif				endif			endif		endfor	endifEndFunction BESTSaveData(wDataSel,wAxisList,wDataList,wDataFolderList,SaveAllFlag)	Wave wDataSel	Wave /T wAxisList,wDataList,wDataFolderList	Variable SaveAllFlag		Variable i	String AxisName, AxisAndFolderName, DataName, DataAndFolderName	if ((sum(wDataSel) > 0) || (SaveAllFlag == 1))		for (i=0;i<numpnts(wDataSel);i+=1)//			if ((wDataSel[i] == 1) || (SaveAllFlag == 1))			if ((wDataSel[i]&2^0 != 0) || (wDataSel[i]&2^3 != 0) || SaveAllFlag)				DataName				= wDataList[i]				DataAndFolderName	=  CheckFolderColon(wDataFolderList[i]) + DataName				AxisName 				= wAxisList[i]				AxisAndFolderName	= CheckFolderColon(wDataFolderList[i]) + AxisName								if (WaveExists($AxisAndFolderName) == 0)					Save /P=home $DataAndFolderName as ReplaceString("_data",DataName,"")+"ibw"				else					Save /J/P=home $AxisAndFolderName, $DataAndFolderName as ReplaceString("_data",DataName,"")+".txt"				endif			endif		endfor	endifEndFunction BESTAdoptData(wDataSel,wAxisList,wDataList,wDataFolderList,SaveAllFlag,AxisChoice,AxisText1,AxisText2)	Wave wDataSel	Wave /T wAxisList,wDataList,wDataFolderList	Variable SaveAllFlag, AxisChoice	String AxisText1, AxisText2		if (ItemsInList(FunctionList("UnloadSpectrumPackage",";","")) == 0)		Execute "LoadSpectrumAnalysisPackage()"		DoUpdate		Print " *** Try again!"		return 0	endif		Variable i	String cmd, AxisName, DataName, DataFolderName, AdoptName	if ((sum(wDataSel) > 0) || (SaveAllFlag == 1))		for (i=0;i<numpnts(wDataSel);i+=1)//			if ((wDataSel[i] == 1) || (SaveAllFlag == 1))			if ((wDataSel[i]&2^0 != 0) || (wDataSel[i]&2^3 != 0) || SaveAllFlag)				DataName			= wDataList[i]				AxisName 			= wAxisList[i]				DataFolderName	=  CheckFolderColon(wDataFolderList[i])								if (AxisChoice > 2)					AdoptName 	= StripSuffixBySeparator(DataName,"_")//					AdoptName 	= StripSuffixBySuffix(DataName,AxisText1)				endif								cmd = "AdoptAxisAndDataFromMemory(\""+AxisName+"\",\"null\",\""+DataFolderName+"\",\""+DataName+"\",\"null\",\""+DataFolderName+"\",\""+AdoptName+"\",\"\",0,0)"								Execute cmd			endif		endfor	endifEndFunction BESTAvgData(wDataSel,wAxisList,wDataList,wDataFolderList,AvgAllFlag)	Wave wDataSel	Wave /T wAxisList,wDataList,wDataFolderList	Variable AvgAllFlag		Variable i, MadeAvgFlag = 0, Num=1	String AxisName, AxisAndFolderName, DataName, DataAndFolderName	String AvgAxisName, AvgDataName, AvgFolderName, FolderStem		if ((sum(wDataSel) > 0) || (AvgAllFlag == 1))		for (i=0;i<numpnts(wDataSel);i+=1)//			if ((wDataSel[i] == 1) || (AvgAllFlag == 1))			if ((wDataSel[i]&2^0 != 0) || (wDataSel[i]&2^3 != 0) || AvgAllFlag)				DataName				= wDataList[i]				DataAndFolderName	=  CheckFolderColon(wDataFolderList[i]) + DataName				AxisName 				= wAxisList[i]				AxisAndFolderName	= CheckFolderColon(wDataFolderList[i]) + AxisName								// What if there is no axis? 								if (MadeAvgFlag==0)					// Create the new averaged data into a new data folder. 					AvgDataName		= ReplaceString("_data",PromptForUserStrInput(DataName+"_av","Name of average","Please name the result"),"")+"_data"										AvgFolderName	= ParseFilePath(1,wDataFolderList[i],":",1,1)+ReplaceString("_data",AvgDataName,"")					AvgAxisName		= ReplaceString("_data",AvgDataName,"_axis")										if (DataFolderExists(AvgFolderName) == 1)						DoAlert 0, "You cannot overwrite existing data! Please check naming."						Abort					else						Print " *** Saving the averaged data into ",AvgFolderName					endif										NewDataFolder $(AvgFolderName)					Duplicate /O/D $AxisAndFolderName, $(CheckFolderColon(AvgFolderName) + AvgAxisName)					Duplicate /O/D $DataAndFolderName, $(CheckFolderColon(AvgFolderName) + AvgDataName)					WAVE AvgAxis	= $(CheckFolderColon(AvgFolderName) + AvgAxisName)					WAVE AvgData	= $(CheckFolderColon(AvgFolderName) + AvgDataName)										MadeAvgFlag = 1				else					WAVE Axis	= $(AxisAndFolderName)					WAVE Data	= $(DataAndFolderName)										if (numpnts(Data) == numpnts(AvgData))						AvgData += Data						Num 	+= 1					endif				endif			endif		endfor		AvgData /= Num	endifEndFunction CreateBrowsePlotPanel()		NewPanel /K=1/W=(32,44,592,392) as "Browsing & Plotting Panel"	DoWindow/C BrowsePlotPanel	CheckWindowPosition("BrowsePlotPanel",32,44,592,392)		String BrowsePlotFolder = "root:Packages:Plotting"		GroupBox DataFolderBox,fColor=(52428,1,1),pos={3,3},size={269,64},title="Data Folder Selection"		// Data Folder Include Text 1	SetVariable DfIncludeText1,pos={37,19},size={230,18},proc=SetDataOrAxisText,title="Data folder includes"	SetVariable DfIncludeText1,fSize=12,bodyWidth= 106,value=$(BrowsePlotFolder+":gIncDf1")		// Data Folder Exclude Text 2	SetVariable DfExcludeText1,pos={33,42},size={234,18},proc=SetDataOrAxisText,title="Data folder excludes"	SetVariable DfExcludeText1,fSize=12,bodyWidth= 106,value=$(BrowsePlotFolder+":gExcDf1")			GroupBox DataBox1,fColor=(52428,1,1),pos={3,69},size={269,146},title="Data Selection"		// File Extension	SetVariable DataExtensionString,pos={108,85},size={159,18},proc=SetDataOrAxisText,title="Data name ends in"	SetVariable DataExtensionString,fSize=12,bodyWidth= 45,value=$(BrowsePlotFolder+":gSuffix")		// Data Include Text 1	SetVariable DataIncludeText1,pos={41,112},size={226,18},proc=SetDataOrAxisText,title="Data name includes"	SetVariable DataIncludeText1,fSize=12,bodyWidth= 106,value=$(BrowsePlotFolder+":gIncText1")		// Data Include Text 2	SetVariable DataIncludeText2,pos={136,139},size={131,18},proc=SetDataOrAxisText,title="and"	SetVariable DataIncludeText2,fSize=12,bodyWidth= 106,value=$(BrowsePlotFolder+":gIncText2")		// Data Exclude Text 1	SetVariable DataExcludeText1,pos={37,166},size={230,18},proc=SetDataOrAxisText,title="Data name excludes"	SetVariable DataExcludeText1,fSize=12,bodyWidth= 106,value=$(BrowsePlotFolder+":gExcText1")		// Data Exclude Text 2	SetVariable DataExcludeText2,pos={136,193},size={131,18},proc=SetDataOrAxisText,title="and"	SetVariable DataExcludeText2,fSize=12,bodyWidth= 106,value=$(BrowsePlotFolder+":gExcText2")		GroupBox AxisBox,fColor=(52428,1,1),pos={275,3},size={269,64},title="Axis Selection"		PopupMenu AxisNameChoice,pos={278,20},size={259,20},title="Axis naming",fSize=12, proc=SetBrowsedDataAxis//	PopupMenu AxisNameChoice,mode=3,popvalue="replace text 1 with text 2",value= #"\"no axis;append text 1;replace _data with _axis;replace suffix1 with suffix2;\""	PopupMenu AxisNameChoice,mode=3,value= #"\"no axis;append text 1;replace _data with _axis;replace suffix1 with suffix2;\""		SetVariable AxisText1,pos={283,43},size={122,18},proc=SetDataOrAxisText,title="Axis text 1"	SetVariable AxisText1,fSize=12,bodyWidth= 50,value=$(BrowsePlotFolder+":gAxisManText1")		SetVariable AxisText2,pos={415,43},size={122,18},proc=SetDataOrAxisText,title="Axis text 2"	SetVariable AxisText2,fSize=12,bodyWidth= 50, value=$(BrowsePlotFolder+":gAxisManText2")		// List of the data files meeting the criteria	ListBox DataFileListBox,mode= 4,pos={4,218},size={222,116},widths={500},proc=BrowsePlotListProc	ListBox DataFileListBox,listWave= $(BrowsePlotFolder+":wDataList")	ListBox DataFileListBox,selWave	= $(BrowsePlotFolder+":wDataSel")		// List of the data folders	ListBox DataFolderListBox,mode= 4,pos={231,218},size={314,116},widths={500},proc=BrowsePlotListProc	ListBox DataFolderListBox,listWave= $(BrowsePlotFolder+":wDataFolderList")	ListBox DataFolderListBox,selWave	= $(BrowsePlotFolder+":wDataFolderSel")		GroupBox PlotBox,pos={275,69},fColor=(52428,1,1),size={269,146},title="Plotting &c"		Button SaveSelectedButton,pos={409,89},size={65,18},proc=BrowsePlotPanelButtons,title="Save"	Button SaveAllButton,pos={480,89},size={50,18},proc=BrowsePlotPanelButtons,title="All"	NVAR gLogX 	= $(BrowsePlotFolder+":gLogX")	NVAR gLogY 	= $(BrowsePlotFolder+":gLogY")	CheckBox BrowseLogXBox,pos={285,115},size={44,14},title="Log X",variable=gLogX	CheckBox BrowseLogYBox,pos={360,115},size={44,14},title="Log Y",variable=gLogY		Button PlotSelectedButton,pos={409,114},size={65,18},proc=BrowsePlotPanelButtons,title="Plot"	Button PlotAllButton,pos={480,114},size={50,18},proc=BrowsePlotPanelButtons,title="All"		Button AverageSelectedButton,pos={409,139},size={65,18},proc=BrowsePlotPanelButtons,title="Average"	Button AverageAllButton,pos={480,139},size={50,18},proc=BrowsePlotPanelButtons,title="All"		Button EditSelectedButton,pos={409,164},size={65,18},proc=BrowsePlotPanelButtons,title="Table"	Button EditAllButton,pos={480,164},size={50,18},proc=BrowsePlotPanelButtons,title="All"		Variable DisableFlag = 0 + 2*(ItemsInList(FunctionList("LoadSelectedDataFiles",";","")) == 0)	Button AdoptSelectedButton,pos={409,189},size={65,18},proc=BrowsePlotPanelButtons,title="Adopt", disable=DisableFlag//	Button AdoptAllButton,pos={480,164},size={50,18},proc=BrowsePlotPanelButtons,title="All"		Button HistoSelectedButton,pos={480,189},size={50,18},proc=BrowsePlotPanelButtons,title="Histo"	//	NVAR 	gFolderFlag = $("root:Packages:Plotting:gFolderFlag")//	CheckBox FolderLegendCheckBox,pos={0,304},size={49,14},proc=PlotBrowseCheckBoxProcs,title="Data Folder in plot legend?"//	CheckBox FolderLegendCheckBox,fsize=12,value= gFolderFlagEnd// *************************************************************************// ***********				SELECTING AND DISPLAYING DATA FILES// *************************************************************************Function SetBrowsedDataAxis(ctrlName,popNum,popStr) : PopupMenuControl	String ctrlName	Variable popNum	String popStr		String BrowsePlotFolder = "root:Packages:Plotting"	NVAR gAxisFlag		= $(BrowsePlotFolder+":gAxisFlag")	gAxisFlag = popNum		SetAxisStr()		ListDataFiles()EndFunction SetAxisStr()	String BrowsePlotFolder = "root:Packages:Plotting"	NVAR gAxisFlag		= $(BrowsePlotFolder+":gAxisFlag")	SVAR gAxisText1		= $(BrowsePlotFolder+":gAxisText1")	SVAR gAxisText2		= $(BrowsePlotFolder+":gAxisText2")	SVAR gAxisManText1	= $(BrowsePlotFolder+":gAxisManText1")	SVAR gAxisManText2	= $(BrowsePlotFolder+":gAxisManText2")	if (gAxisFlag == 1)	elseif (gAxisFlag == 2)		gAxisText1 = gAxisManText1		gAxisText2 = ""	// Is this right? 	elseif (gAxisFlag == 3)		gAxisText1 = "_data"		gAxisText2 = "_axis"	elseif (gAxisFlag == 4)		gAxisText1 = gAxisManText1		gAxisText2 = gAxisManText2	endifEndFunction /T AxisStrFromDataStr(DataName,AxisFlag,Text1,Text2)	String DataName, Text1, Text2	Variable AxisFlag		String SfxChar, Suffix		if (AxisFlag == 1)		return ""			elseif (AxisFlag == 2)		return DataName + Text1			else		return StripSuffixBySuffix(DataName,Text1) + Text2	endifEndFunction BrowsePlotListProc(ctrlName,row,col,event) : ListboxControl	String ctrlName	Variable row	Variable col	Variable event		String BrowsePlotFolder = "root:Packages:Plotting"	WAVE wDataSel				= $(BrowsePlotFolder+":wDataSel")	WAVE wDataFolderSel			= $(BrowsePlotFolder+":wDataFolderSel")		if (cmpstr(ctrlName,"DataFileListBox") == 0)		wDataFolderSel = wDataSel	else		wDataSel = wDataFolderSel	endifEndFunction SetDataOrAxisText(ctrlName,varNum,varStr,varName) : SetVariableControl	String ctrlName	Variable varNum	String varStr	String varName		SetAxisStr()		ListDataFiles()EndFunction ListDataFiles()	String BrowsePlotFolder 		= "root:Packages:Plotting"	WAVE /T wDataList			= $(BrowsePlotFolder+":wDataList")	WAVE /T wAxisList			= $(BrowsePlotFolder+":wAxisList")	WAVE wDataSel				= $(BrowsePlotFolder+":wDataSel")	WAVE /T wDataFolderList		= $(BrowsePlotFolder+":wDataFolderList")	WAVE wDataFolderSel			= $(BrowsePlotFolder+":wDataFolderSel")		Redimension /N=0 wAxisList, wDataList, wDataFolderList	Redimension /N=0 wDataSel, wDataFolderSel		SVAR gIncDf1		= $(BrowsePlotFolder+":gIncDf1")	SVAR gExcDf1		= $(BrowsePlotFolder+":gExcDf1")	SVAR gSuffix		= $(BrowsePlotFolder+":gSuffix")	SVAR gIncText1	= $(BrowsePlotFolder+":gIncText1")	SVAR gIncText2	= $(BrowsePlotFolder+":gIncText2")	SVAR gExcText1	= $(BrowsePlotFolder+":gExcText1")	SVAR gExcText2	= $(BrowsePlotFolder+":gExcText2")	NVAR gAxisFlag	= $(BrowsePlotFolder+":gAxisFlag")	SVAR gAxisText1	= $(BrowsePlotFolder+":gAxisText1")	SVAR gAxisText2	= $(BrowsePlotFolder+":gAxisText2")		String CurrDf = GetDataFolder(1)	RecursiveDataList(CurrDf, gAxisFlag, gAxisText1, gAxisText2, gIncDf1, gExcDf1, gSuffix, gIncText1, gIncText2, gExcText1, gExcText2)EndFunction RecursiveDataList(TopFolderStr, AxisFlag, AxisText1, AxisText2, DfIncStr, DfExcStr, Suffix, IncStr1, IncStr2, ExcStr1, ExcStr2)	Variable AxisFlag	string TopFolderStr, AxisText1, AxisText2, DfIncStr, DfExcStr, Suffix, IncStr1, IncStr2, ExcStr1, ExcStr2		String BrowsePlotFolder 	= "root:Packages:Plotting"	WAVE /T wDataList			= $(BrowsePlotFolder+":wDataList")	WAVE /T wAxisList			= $(BrowsePlotFolder+":wAxisList")	WAVE wDataSel				= $(BrowsePlotFolder+":wDataSel")	WAVE /T wDataFolderList		= $(BrowsePlotFolder+":wDataFolderList")	WAVE wDataFolderSel			= $(BrowsePlotFolder+":wDataFolderSel")		Variable TotNumData = DimSize(wDataList,0)		String PossAxisList, DataName, AxisName, FolderName	Variable NumFolders, NumData, ii, SuffLen, DataLen, SkipFlag, AxisIdx	if (!(datafolderexists (TopFolderStr)))		return 0	else		SkipFlag	= 0		//		SkipFlag += (StringMatch(TopFolderStr,"root:"))		SkipFlag += !(StringMatch(TopFolderStr,"*"+DfIncStr+"*"))		SkipFlag += (StrSearch(TopFolderStr,DfExcStr,0) > -1)		if (SkipFlag == 0)			// Count the total number of waves in the folder. 			NumData =  CountObjects(TopFolderStr, 1) - 1						// All the waves in this folder may be axis waves			PossAxisList = FolderWaveList(TopFolderStr,"*",";","",-1,0)						// Loop through all the waves in this folder. 			for (ii = 0; ii <= NumData; ii += 1)				SkipFlag	= 0				DataName 	= GetIndexedObjName(TopFolderStr, 1, ii)								SuffLen = strlen(Suffix)				DataLen = strlen(DataName)				if ((SuffLen > 0) && (DataLen > SuffLen))					Skipflag += (cmpstr(DataName[DataLen-SuffLen,DataLen-1],Suffix) != 0)				endif								SkipFlag += !(StringMatch(DataName,"*"+IncStr1+"*"))				SkipFlag += !(StringMatch(DataName,"*"+IncStr2+"*"))								SkipFlag += (StrSearch(DataName,ExcStr1,0) > -1)				SkipFlag += (StrSearch(DataName,ExcStr2,0) > -1)								if (SkipFlag == 0)					if (AxisFlag > 1)						// We need to locate a proper axis						AxisName 	= AxisStrFromDataStr(DataName,AxisFlag,AxisText1,AxisText2)												SkipFlag +=  (WhichListItem(AxisName,PossAxisList) == -1)					endif				endif								if (SkipFlag > 0)					continue				else					TotNumData += 1					Redimension /N=(TotNumData) wAxisList, wDataList, wDataFolderList					Redimension /N=(TotNumData) wDataSel, wDataFolderSel										wDataList[TotNumData-1]			= DataName					wDataSel[TotNumData-1]			= 0					wDataFolderList[TotNumData-1]		= TopFolderStr					wDataFolderSel[TotNumData-1]		= 0										if (AxisFlag > 1)						wAxisList[TotNumData-1]		= AxisName					endif				endif			endfor		endif	endif		// Now look in all the folders in this folder	NumFolders = CountObjects(TopFolderStr, 4) -1		for (ii = 0; ii <= NumFolders; ii += 1)		FolderName = CheckFolderColon(TopFolderStr) + GetIndexedObjName (TopFolderStr, 4,  ii)				// *!@#*!@#*!@#*!@#*!@#   RECURSIVE *!@#*!@#*!@#*!@#*!@#*!@#*!@#*		RecursiveDataList(FolderName, AxisFlag, AxisText1, AxisText2, DfIncStr, DfExcStr, Suffix, IncStr1, IncStr2, ExcStr1, ExcStr2)	endforend