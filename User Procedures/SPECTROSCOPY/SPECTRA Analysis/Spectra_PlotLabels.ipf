#pragma TextEncoding = "UTF-8"#pragma rtGlobals=1		// Use modern global access method.// *************************************************************// ****		Common labels and units// *************************************************************// 	********* NOTE: To find the place where the default plot labels are set, scroll to the bottom of this proc file: // 					AppendPlotLabelControlsFunction SetCommonLabels()	String OldDF = getDataFolder(1)		NewDataFolder /O/S root:SPECTRA	NewDataFolder /O/S root:SPECTRA:Plotting		String /G gCommonXLabels, gCommonYLabels//, gCommonXUnits, gCommonYUnits		gCommonXLabels = "_manual_;2-Theta;Angle;Concentration;Coverage;Distance;E;Energy;Frequency;k;pH;Photon energy;Potential;Pressure;Q;q;Radius;R;r;Temperature;Time;v;Volume;Wavelength;Wavenumbers;Z';"		gCommonYLabels = "_manual_;Absorbance;Abundance;Concentration;Current;Diff. Abs.;Diff. OD;milli Diff. OD;Diff. X-ray Abs.;Distance;Emission;e';e'';Energy;G(r);i;Intensity;k Chi;k^2 Chi;k^3 Chi;|FT{k Chi}|;|FT{k^2 Chi}|;|FT{k^3 Chi}|;"		gCommonYLabels = gCommonYLabels + "MSRD;PDF;pH;Phase;Reflectance;S(Q);Temperature;Volume;X-ray Absorption;|Z|;-Z'';"		SetDataFolder $(OldDF)EndFunction /T SetCommonUnits(LabelChoice)	String LabelChoice		if (cmpstr("_manual_",LabelChoice) == 0)		return "_none_;"	elseif (cmpstr("2-Theta",LabelChoice) == 0)		return "degrees;"	elseif (cmpstr("Angle",LabelChoice) == 0)		return "degrees;radians;mrad;"	elseif (cmpstr("Absorbance",LabelChoice) == 0)		return "a. u.;_none_;"	elseif (cmpstr("Abundance",LabelChoice) == 0)		return "%;a. u.;_none_;"	elseif (cmpstr("Concentration",LabelChoice) == 0)		return "M;mM;µM;nM;ppm;ppb;"	elseif (cmpstr("Coverage",LabelChoice) == 0)		return "mM m-2;µM m-2;nM m-2a. u.;_none_;"	elseif (cmpstr("Current",LabelChoice) == 0)			return "A;mA;µA;nA;"	elseif (cmpstr("Diff. Abs.",LabelChoice) == 0)		return "_none_;x 10^-3;"	elseif (cmpstr("Diff. OD",LabelChoice) == 0)		return "_none_;x 10^-3;"	elseif (cmpstr("Distance",LabelChoice) == 0)		return "Å;nm;µm;mm;m;km;"	elseif (cmpstr("E",LabelChoice) == 0)			return "V vs. Ag/AgCl;mV vs. Ag/AgCl;"	elseif (cmpstr("Emission",LabelChoice) == 0)		return "counts;cps;a. u.;_none_;"	elseif (cmpstr("Energy",LabelChoice) == 0)		return "eV;kcal;keV;kT;J;J mol-1;"	elseif (cmpstr("Frequency",LabelChoice) == 0)		return "Hz;kHz;MHz;GHz;THz;"	elseif (cmpstr("i",LabelChoice) == 0)			return "A;mA;µA;nA;"		elseif (cmpstr("Intensity",LabelChoice) == 0)		return "counts;counts/s;a. u.;_none_;"	elseif (cmpstr("k",LabelChoice) == 0)		return "Å-1"	elseif (cmpstr("k^2 Chi",LabelChoice) == 0)		return "_none_;"	elseif (cmpstr("k^3 Chi",LabelChoice) == 0)		return "_none_;"	elseif (cmpstr("MSRD",LabelChoice) == 0)		return "Å-2;"	elseif (cmpstr("pH",LabelChoice) == 0)		return "_none_;"	elseif (cmpstr("Phase",LabelChoice) == 0)		return "radians;degrees;"	elseif (cmpstr("Potential",LabelChoice) == 0)		return "vs SHE, Volts;vs Ag/AgCl, Volts;vs SCE, Volts;"	elseif (cmpstr("Photon energy",LabelChoice) == 0)		return "eV;keV;"	elseif (cmpstr("Pressure",LabelChoice) == 0)		return "GPa;Mbar;bar;Torr;Pa;"	elseif (cmpstr("Q",LabelChoice) == 0)		return "Å-1;nm-1;"	elseif (cmpstr("R",LabelChoice) == 0)		return "Å;nm;µm;mm;m;km;"	elseif (cmpstr("Radius",LabelChoice) == 0)		return "Å;nm;µm;mm;m;km;"	elseif (cmpstr("Reflectance",LabelChoice) == 0)		return "%;a. u.;_none_;"	elseif (cmpstr("Temperature",LabelChoice) == 0)		return "K;˚C;˚F;"	elseif (cmpstr("Time",LabelChoice) == 0)		return "fs;ps;ns;µs;ms;s;min;hours;days;"	elseif (cmpstr("Volume",LabelChoice) == 0)		return "mL;cm^3;"	elseif (cmpstr("Wavelength",LabelChoice) == 0)		return "Å;nm;µm;mm;m;km;"	elseif (cmpstr("Wavenumbers",LabelChoice) == 0)		return "cm-1;"	elseif (cmpstr("|Z|",LabelChoice) == 0)		return "_none_;"	elseif (cmpstr("-Z''",LabelChoice) == 0)		return "_none_;"	elseif (cmpstr("Z'",LabelChoice) == 0)		return "_none_;"	else		return "_none_;a. u.;x 10^-3;"	endifEndFunction /T ReturnLabelandUnits(LabelChoice,UnitChoice,CommonLabels,CommonUnits,ManualLabel)	Variable LabelChoice,UnitChoice	String CommonLabels,CommonUnits,ManualLabel		String XYLabel	= StringFromList(LabelChoice,CommonLabels)	String XYUnit		= StringFromList(UnitChoice,CommonUnits)		if (cmpstr(XYLabel,"_manual_") == 0)		return ManualLabel		else		String LabelStr	= XYLabel		String UnitStr		= XYUnit				UnitStr = ReplaceString("-1",UnitStr,"\S-1\M")		UnitStr = ReplaceString("-2",UnitStr,"\S-2\M")				UnitStr = ReplaceString("^3",UnitStr,"\S3\M")		UnitStr = ReplaceString("^-3",UnitStr,"\S-3\M")			if (cmpstr(XYLabel,"2-theta") == 0)			LabelStr = "2\Z20θ\M\F'Helvetica Light'"		endif		if (cmpstr(XYLabel,"k Chi") == 0)			LabelStr = "k χ\M\F'Helvetica Light'(k)"		endif		if (cmpstr(XYLabel,"k^2 Chi") == 0)			LabelStr = "k\S2\M χ\M\F'Helvetica Light'(k)"		endif		if (cmpstr(XYLabel,"k^3 Chi") == 0)			LabelStr = "k\S3\M χ\M\F'Helvetica Light'(k)"		endif				if (cmpstr(XYLabel,"|FT{ Chi}|") == 0)			LabelStr = "|FT{k χ\M\F'Helvetica Light'(k)}|"		endif		if (cmpstr(XYLabel,"|FT{k^2 Chi}|") == 0)			LabelStr = "|FT{k\S2\M χ\M\F'Helvetica Light'(k)}|"		endif		if (cmpstr(XYLabel,"|FT{k^3 Chi}|") == 0)			LabelStr = "|FT{k\S3\M χ\M\F'Helvetica Light'(k)}|"		endif				if (cmpstr(XYLabel,"Diff. Abs.") == 0)			LabelStr = "\Z18Δ\F'Helvetica Light'A"		endif		if (cmpstr(XYLabel,"Diff. OD") == 0)			LabelStr = "\Z18Δ\F'Helvetica Light'OD"		endif		if (cmpstr(XYLabel,"milli Diff. OD") == 0)			LabelStr = "\Z18mΔ\F'Helvetica Light'OD"		endif		if (cmpstr(XYLabel,"X-ray Absorption") == 0)			LabelStr = "\Z18\F'Helvetica Light'XA"		endif		if (cmpstr(XYLabel,"Diff. X-ray Abs.") == 0)			LabelStr = "\Z18 Δ\F'Helvetica Light'XA"		endif		if (cmpstr(XYLabel,"e'") == 0)//			LabelStr = "\Z24ε\F'Helvetica Light''"			LabelStr = "\Z32ε'"		endif		if (cmpstr(XYLabel,"e''") == 0)//			LabelStr = "\Z24ε\F'Helvetica Light'''"			LabelStr = "\Z32ε''"//			ModifyGraph lblRot(right)=90		endif				String fontName = "\\F'Helvetica Light'"						if ((strlen(XYUnit)==0) || (cmpstr(XYUnit,"_none_") == 0))			return fontName+LabelStr		else			return fontName+LabelStr + " (" + UnitStr + ")"		endif	endifEndFunction DisplayLabelControls(WindowName,AxisType,ManualFlag)	String WindowName, AxisType	Variable ManualFlag		String ManualControlName 	= "Manual"+AxisType+"LabelString"	SetVariable $ManualControlName, win=$WindowName, disable=!ManualFlag		String UnitControlName		= "Plot"+AxisType+"UnitMenu"	SetVariable $UnitControlName, win=$WindowName, disable=(ManualFlag)EndFunction PlotLabelMenuProcs(ctrlName,popNum,popStr) : PopupMenuControl	String ctrlName	Variable popNum	String popStr		SVAR gCommonXLabels 	= $("root:SPECTRA:Plotting:gCommonXLabels")	SVAR gCommonYLabels 	= $("root:SPECTRA:Plotting:gCommonYLabels")		String cmd, LabelWinName, PlotName = WinName(0,65)		String PlotFolderName 	= "root:SPECTRA:Plotting:" + PlotName	NVAR gXLabelChoice 		= $(PlotFolderName+":gXLabelChoice")	NVAR gYLabelChoice 		= $(PlotFolderName+":gYLabelChoice")	NVAR gY2LabelChoice 		= $(PlotFolderName+":gY2LabelChoice")	NVAR gXUnitChoice		= $(PlotFolderName+":gXUnitChoice")	NVAR gYUnitChoice		= $(PlotFolderName+":gYUnitChoice")	NVAR gY2UnitChoice		= $(PlotFolderName+":gY2UnitChoice")	//	SVAR gManualXLabel		= $(PlotFolderName+":gManualXLabel")	SVAR gManualYLabel		= $(PlotFolderName+":gManualYLabel")	SVAR gManualY2Label		= $(PlotFolderName+":gManualY2Label")	SVAR gXLabelUnits 		= $(PlotFolderName+":gXLabelUnits")	SVAR gYLabelUnits 		= $(PlotFolderName+":gYLabelUnits")	SVAR gY2LabelUnits 		= $(PlotFolderName+":gY2LabelUnits")		if (cmpstr("PlotXLabelMenu",ctrlName) == 0)				gXLabelChoice 		= popNum-1				gXLabelUnits	 	= SetCommonUnits(popStr)		gXUnitChoice 		= 0		PopupMenu PlotXUnitMenu,mode=gXUnitChoice+1			elseif (cmpstr("PlotYLabelMenu",ctrlName) == 0)		gYLabelChoice 		= popNum-1				gYLabelUnits	 	= SetCommonUnits(popStr)		gYUnitChoice 		= 0		PopupMenu PlotYUnitMenu,mode=gYUnitChoice+1			elseif (cmpstr("PlotY2LabelMenu",ctrlName) == 0)		gY2LabelChoice 	= popNum-1		gY2LabelUnits 	= SetCommonUnits(popStr)		gY2UnitChoice 	= 0		PopupMenu PlotY2UnitMenu,mode=gY2UnitChoice+1			elseif (cmpstr("PlotXUnitMenu",ctrlName) == 0)		gXUnitChoice = popNum-1			elseif (cmpstr("PlotYUnitMenu",ctrlName) == 0)		gYUnitChoice = popNum-1			elseif (cmpstr("PlotY2UnitMenu",ctrlName) == 0)		gY2UnitChoice = popNum-1	endif		// Now add the label	if (StrSearch(PlotName,"Coefficient",0) > -1)		LabelWinName =  "Coefficients#CoeffPlot"	else		LabelWinName =  PlotName	endif		String fontName = "\\F'Helvetica Light'"			String XLabel =  ReturnLabelandUnits(gXLabelChoice,gXUnitChoice,gCommonXLabels,gXLabelUnits,gManualXLabel)	Label /W=$LabelWinName/Z bottom XLabel		String YLabel = ReturnLabelandUnits(gYLabelChoice,gYUnitChoice,gCommonYLabels,gYLabelUnits,gManualYLabel)	Label /W=$LabelWinName/Z left YLabel	String axInfo = AxisInfo(LabelWinName, "right")	if ((strlen(axInfo) > 0) && (NVAR_Exists(gY2LabelChoice) == 1))		String Y2Label = ReturnLabelandUnits(gY2LabelChoice,gY2UnitChoice,gCommonYLabels,gY2LabelUnits,gManualY2Label)		Y2Label = fontName + Y2Label		Label /W=$LabelWinName/Z right Y2Label	endif		ControlUpdate /AEndFunction TabControlOfPlotLabelControls(ChosenTab,HostTab,GreyXFlag,GreyYFlag,GreyY2Flag,Y2LabelFlag,WindowName)	Variable ChosenTab,HostTab,GreyXFlag,GreyYFlag,GreyY2Flag,Y2LabelFlag	String WindowName		TabControlOfPlotControls(ChosenTab,HostTab,"XLABEL*",WindowName,GreyXFlag)	TabControlOfPlotControls(ChosenTab,HostTab,"XUNIT*",WindowName,GreyXFlag)	TabControlOfPlotControls(ChosenTab,HostTab,"YLABEL*",WindowName,GreyYFlag)	TabControlOfPlotControls(ChosenTab,HostTab,"YUNIT*",WindowName,GreyXFlag)		String axInfo = AxisInfo(WindowName, "right")	if ((Y2LabelFlag == 1) && (strlen(axInfo) > 0))		TabControlOfPlotControls(ChosenTab,HostTab,"Y2*",WindowName,GreyY2Flag)	else		ShowHideControlsInList(WindowName,"PlotY2LabelMenu;PlotY2UnitMenu;","PopupMenu",1)		ShowHideControlsInList(WindowName,"ManualY2LabelString;","SetVariable",1)		ShowHideControlsInList(WindowName,"NoY2LabelCheckBox;","CheckBox",1)	endifEndFunction AppendPlotLabelControls(WindowName,DisableXLabel,DisableYLabel,Y2LabelFlag,DisableY2Label,hOffset,vOffset)	String WindowName	Variable DisableXLabel, DisableYLabel, Y2LabelFlag,DisableY2Label,hOffset,vOffset		SVAR gCommonXLabels 	= $("root:SPECTRA:Plotting:gCommonXLabels")	SVAR gCommonYLabels 	= $("root:SPECTRA:Plotting:gCommonYLabels")		// ***********************************************	// **		Default Values for Label Text	// ***********************************************		String PlotFolderName 	= "root:SPECTRA:Plotting:" + WindowName	MakeVariableIfNeeded(PlotFolderName+":gXLabelChoice",6)	// Photon energy	MakeVariableIfNeeded(PlotFolderName+":gYLabelChoice",8)	// Intensity	MakeVariableIfNeeded(PlotFolderName+":gY2LabelChoice",5)	MakeVariableIfNeeded(PlotFolderName+":gXUnitChoice",0)	// eV	MakeVariableIfNeeded(PlotFolderName+":gYUnitChoice",2)	// a. u.	MakeVariableIfNeeded(PlotFolderName+":gY2UnitChoice",1)		NVAR gXLabelChoice 		= $(PlotFolderName+":gXLabelChoice")	NVAR gYLabelChoice 		= $(PlotFolderName+":gYLabelChoice")	NVAR gY2LabelChoice 		= $(PlotFolderName+":gY2LabelChoice")	NVAR gXUnitChoice		= $(PlotFolderName+":gXUnitChoice")	NVAR gYUnitChoice		= $(PlotFolderName+":gYUnitChoice")	NVAR gY2UnitChoice		= $(PlotFolderName+":gY2UnitChoice")		// These do not need initialization	Variable /G gNoYLabelFlag, gNoY2LabelFlag	String /G gManualXLabel, gManualYLabel, gManualY2Label		// The X-axis label controls	PopupMenu PlotXLabelMenu,fSize=12,pos={300+hOffset,62+vOffset},title="X Label", win=$WindowName	PopupMenu PlotXLabelMenu, proc=PlotLabelMenuProcs, disable = DisableXLabel	PopupMenu PlotXLabelMenu,value=#"root:SPECTRA:Plotting:gCommonXLabels"	PopupMenu PlotXLabelMenu,mode=gXLabelChoice+1		SetVariable ManualXLabelString,pos={300+hOffset,92+vOffset},size={180,19},title="Manual", disable = DisableXLabel	SetVariable ManualXLabelString,fSize=12,value=$("root:SPECTRA:Plotting:"+WindowName+":gManualXLabel")		String /G gXLabelUnits = SetCommonUnits(StringFromList(gXLabelChoice,gCommonXLabels))	PopupMenu PlotXUnitMenu,fSize=12,pos={300+hOffset,122+vOffset},title="X Units", win=$WindowName	PopupMenu PlotXUnitMenu, proc=PlotLabelMenuProcs, disable = DisableXLabel	SetControlGlobalVariable(WindowName,"PlotXUnitMenu","root:SPECTRA:Plotting","gXLabelUnits",1)	PopupMenu PlotXUnitMenu,mode=gXUnitChoice+1		// The Y-axis label controls	PopupMenu PlotYLabelMenu,fSize=12,pos={100+hOffset,62+vOffset},title="Y Label", win=$WindowName	PopupMenu PlotYLabelMenu,proc=PlotLabelMenuProcs, disable = DisableYLabel	PopupMenu PlotYLabelMenu,value=#"root:SPECTRA:Plotting:gCommonYLabels"	PopupMenu PlotYLabelMenu,mode=gYLabelChoice+1		SetVariable ManualYLabelString,pos={100+hOffset,92+vOffset},size={180,19},title="Manual", disable = DisableYLabel	SetVariable ManualYLabelString,fSize=12,value=$("root:SPECTRA:Plotting:"+WindowName+":gManualYLabel")		String /G gYLabelUnits = SetCommonUnits(StringFromList(gYLabelChoice,gCommonYLabels))	PopupMenu PlotYUnitMenu,fSize=12,pos={100+hOffset,122+vOffset},title="Y Units", win=$WindowName	PopupMenu PlotYUnitMenu,proc=PlotLabelMenuProcs, disable = DisableYLabel	SetControlGlobalVariable(WindowName,"PlotYUnitMenu","root:SPECTRA:Plotting","gYLabelUnits",1)	PopupMenu PlotYUnitMenu,mode=gYUnitChoice+1		CheckBox NoYLabelCheckBox pos={142+hOffset,152+vOffset}, title="No Labels",fSize=12,value=gNoYLabelFlag, proc=NoLabelControl,disable = DisableYLabel		if (Y2LabelFlag == 1)		// The Y2-axis label controls		PopupMenu PlotY2LabelMenu,fSize=12,pos={502+hOffset,62+vOffset},title="Y2 Label", win=$WindowName		PopupMenu PlotY2LabelMenu,proc=PlotLabelMenuProcs, disable = DisableY2Label		PopupMenu PlotY2LabelMenu,mode=gY2LabelChoice+1		PopupMenu PlotY2LabelMenu,value=#"root:SPECTRA:Plotting:gCommonYLabels"				SetVariable ManualY2LabelString,pos={502+hOffset,92+vOffset},size={180,19},title="Manual", disable = DisableY2Label		SetVariable ManualY2LabelString,fSize=12,value=$("root:SPECTRA:Plotting:"+WindowName+":gManualY2Label")				String /G gY2LabelUnits = SetCommonUnits(StringFromList(gY2LabelChoice,gCommonYLabels))		PopupMenu PlotY2UnitMenu,fSize=12,pos={502+hOffset,122+vOffset},title="Y2 Units", win=$WindowName		PopupMenu PlotY2UnitMenu,proc=PlotLabelMenuProcs, disable = DisableY2Label		PopupMenu PlotY2UnitMenu,mode=gY2UnitChoice+1		SetControlGlobalVariable(WindowName,"PlotY2UnitMenu","root:SPECTRA:Plotting","gY2LabelUnits",1)				CheckBox NoY2LabelCheckBox pos={544+hOffset,152+vOffset}, title="No Labels",fSize=12,value=gNoY2LabelFlag, proc=NoLabelControl,disable = DisableY2Label	endif		PlotLabelMenuProcs("",-1,"")EndFunction NoLabelControl(ctrlName,checked) : CheckBoxControl	String ctrlName	Variable checked		checked 	= (numtype(checked) != 0) ? 0 : checked		String AxisName, PlotName = WinName(0,65)	String PlotFolderName = "root:SPECTRA:Plotting:" + PlotName		if (cmpstr(ctrlName,"NoYLabelCheckBox")==0)		NVAR gNoLabelFlag		= $(PlotFolderName + ":gNoYLabelFlag")		AxisName = "left"	elseif (cmpstr(ctrlName,"NoY2LabelCheckBox")==0)		NVAR gNoLabelFlag		= $(PlotFolderName + ":gNoY2LabelFlag")		AxisName = "right"	endif		gNoLabelFlag = checked	ModifyGraph /Z noLabel($AxisName)=checked,  lblMargin($AxisName)=45*checked+10	Variable tickflag = (checked) ? 3 : 0	ModifyGraph /Z tick($AxisName)=tickflagEnd