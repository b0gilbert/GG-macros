#pragma rtGlobals=1		// Use modern global access method.Function /T DefaultBond(Bond,MinB,MaxB)	String Bond	Variable &MinB, &MaxB		// for smplicity, minB=0	MaxB=-1.		// Ordered by increasing Z	strswitch (Bond)		case "H-C":			MaxB = 1.2			break		case "C-C":			MaxB = 1.6			break		case "C-O":			MaxB = 1.5			break		case "C-S":			MaxB = 2			break		case "O-S":			MaxB = 1.6			break		case "O-Fe":			MaxB = 2.4			break		case "S-S":			MaxB = 2.2			break		case "S-Fe":			MaxB = 3.0			break	endswitchEndFunction /T AtomColor(Z)	Variable Z		String ColorString	Variable r, g, b		switch(Z)	// numeric switch		case 1:			ColorString = "0.2,0.2,0.2"			break		case 6:			ColorString = "0,0,0"			break		case 7:			ColorString = "0,0,0"			break		case 8:			ColorString = "0.9,0,0"			break		case 26:			ColorString = "0.8,0.266606,0.0"			break		case 999:			ColorString = "0,0,0"			break		default:			ColorString = ReturnAtomRGB(Z,r, g, b,"Fiddle")	endswitch		return ColorStringEndFunction /T ReturnAtomRGB(Z,r,g,b,ColorTable)	Variable Z, &r, &g, &b	String ColorTable		String RGB	Variable NumAtoms=90, NumColors, ColorChoice		ColorTab2Wave $ColorTable	WAVE M_colors	NumColors = dimsize(M_colors,0)	ColorChoice = (Z/NumAtoms) * NumColors		r	= min(65535,trunc(M_colors[ColorChoice][0]))/65535	g	= min(65535,trunc(M_colors[ColorChoice][1]))/65535	b	= min(65535,trunc(M_colors[ColorChoice][2]))/65535		RGB = num2str(r)+","+num2str(g)+","+num2str(b)		return RGBEndFunction /T ZNumListToAtomList(ZNumList)	String ZNumList		String AtomList=""	Variable i, n=ItemsInList(ZNumList)		for (i=0;i<n;i+=1)		AtomList += ZNumberToAtom(str2num(StringFromList(i,ZNumList))) +";"	endfor		return AtomListEndFunction /T CapitalizeElements(Atom)	String Atom		Variable NLett=strlen(Atom)	if (NLett == 1)		return UpperStr(Atom)	else		return UpperStr(Atom[0,0]) + LowerStr(Atom[1,strlen(Atom)-1])	endifEndFunction /T ZNumberToAtom(Z)	Variable Z	String Atom		switch (abs(Z))	case 1:		Atom="H"		break	case 2:		Atom="He"		break	case 3:		Atom="Li"		break	case 4:		Atom="Be"		break	case 5:		Atom="B"		break	case 6:		Atom="C"		break	case 7:		Atom="N"		break	case 8:		Atom="O"		break	case 9:		Atom="F"		break	case 10:		Atom="Ne"		break	case 11:		Atom="Na"		break	case 12:		Atom="Mg"		break	case 13:		Atom="Al"		break	case 14:		Atom="Si"		break	case 15:		Atom="P"		break	case 16:		Atom="S"		break	case 17:		Atom="Cl"		break	case 18:		Atom="Ar"		break	case 19:		Atom="K"		break	case 20:		Atom="Ca"		break	case 21:		Atom="Sc"		break	case 22:		Atom="Ti"		break	case 23:		Atom="V"		break	case 24:		Atom="Cr"		break	case 25:		Atom="Mn"		break	case 26:		Atom="Fe"		break	case 27:		Atom="Co"		break	case 28:		Atom="Ni"		break	case 29:		Atom="Cu"		break	case 30:		Atom="Zn"		break	case 31:		Atom="Ga"		break	case 32:		Atom="Ge"		break	case 33:		Atom="As"		break	case 34:		Atom="Se"		break	case 35:		Atom="Br"		break	case 36:		Atom="Kr"		break	case 37:		Atom="Rb"		break	case 38:		Atom="Sr"		break	case 39:		Atom="Y"		break	case 40:		Atom="Zr"		break	case 41:		Atom="Nb"		break	case 42:		Atom="Mo"		break	case 43:		Atom="Tc"		break	case 44:		Atom="Ru"		break	case 45:		Atom="Rh"		break	case 46:		Atom="Pd"		break	case 47:		Atom="Ag"		break	case 48:		Atom="Cd"		break	case 49:		Atom="In"		break	case 50:		Atom="Sn"		break	case 51:		Atom="Sb"		break	case 52:		Atom="Te"		break	case 53:		Atom="I"		break	case 54:		Atom="Xe"		break			case 58:		Atom="Ce"		break			case 74:		Atom="W"		break			case 80:		Atom="Hg"		break			case 82:		Atom="Pb"		break			case 63:		Atom="Eu"		break	case 92:		Atom="U"		break			case 999:		Atom="X"		break			default:		Atom=num2str(Z)	endswitch		return AtomEndFunction AtomToZNumber(TextLabel,PromptFlag)	String TextLabel	Variable PromptFlag		Variable Z_number=-1		// Get rid of any site designation numbers	TextLabel 	= ReturnTextBeforeNumber(TextLabel)		strswitch (TextLabel)		case "OH": 		// DL_POLY Oxygen in a hydroxide group			Z_number = 8			break		case "OW": 	// DL_POLY Oxygen in a water molecule			Z_number = 8			break		case "HW": 	// DL_POLY Hydrogen in a water molecule			Z_number = 1			break					case "Ag":			Z_number = 47			break		case "silver":			Z_number = 47			break		case "Al":			Z_number = 13			break		case "aluminum":			Z_number = 13			break		case "Ar":			Z_number = 18			break		case "argon":			Z_number = 18			break		case "As":			Z_number = 33			break		case "arsenic":			Z_number = 33			break					case "B":			Z_number = 5			break		case "boron":			Z_number = 5			break		case "Ba":			Z_number = 56			break		case "barium":			Z_number = 56			break		case "Be":			Z_number = 4			break		case "beryllium":			Z_number = 4			break		case "Br":			Z_number = 35			break		case "bromium":			Z_number = 35			break					case "C":			Z_number = 6			break		case "carbon":			Z_number = 6			break		case "Ca":			Z_number = 20			break		case "calcium":			Z_number = 20			break		case "Cd":			Z_number = 48			break		case "cadmium":			Z_number = 48			break		case "Ce":			Z_number = 58			break		case "cerium":			Z_number = 58			break		case "Cl":			Z_number = 17			break		case "chlorine":			Z_number = 17			break		case "Co":			Z_number = 27			break		case "cobalt":			Z_number = 27			break		case "Cr":			Z_number = 24			break		case "chromium":			Z_number = 24			break		case "Cs":			Z_number = 55			break		case "cesium":			Z_number = 55			break		case "caesium":			Z_number = 55			break		case "Cu":			Z_number = 29			break		case "copper":			Z_number = 29			break					case "Eu":			Z_number = 63			break		case "europium":			Z_number = 63			break			case "F":			Z_number = 9			break		case "fluorine":			Z_number = 9			break		case "Fe":			Z_number = 26			break		case "iron":			Z_number = 26			break					case "Ga":			Z_number = 31			break		case "gallium":			Z_number = 31			break		case "Ge":			Z_number = 32			break		case "germanium":			Z_number = 32			break					case "H":			Z_number = 1			break		case "hydrogen":			Z_number = 1			break		case "He":			Z_number = 2			break		case "helium":			Z_number = 2			break		case "Hg":			Z_number = 80			break		case "mercury":			Z_number = 80			break					case "In":			Z_number = 49			break		case "indium":			Z_number = 49			break					case "Li":			Z_number = 3			break		case "lithium":			Z_number = 3			break					case "K":			Z_number = 19			break		case "potassium":			Z_number = 19			break					case "Mg":			Z_number = 12			break		case "magnesium":			Z_number = 12			break		case "Mn":			Z_number = 25			break		case "manganese":			Z_number = 25			break		case "Mo":			Z_number = 42			break		case "molybdenum":			Z_number = 42			break					case "N":			Z_number = 7			break		case "nitrogen":			Z_number = 7			break		case "Na":			Z_number = 11			break		case "sodium":			Z_number = 11			break		case "Nb":			Z_number = 41			break		case "niobium":			Z_number = 41			break		case "Ne":			Z_number = 10			break		case "neon":			Z_number = 10			break		case "Ni":			Z_number = 28			break		case "nickel":			Z_number = 28			break					case "O":			Z_number = 8			break		case "oxygen":			Z_number = 8			break					case "P":			Z_number = 15			break		case "phosphorus":			Z_number = 15			break		case "Pb":			Z_number = 82			break		case "lead":			Z_number = 82			break		case "Pd":			Z_number = 46			break		case "palladium":			Z_number = 46			break					case "Rb":			Z_number = 37			break		case "rubidium":			Z_number = 37			break		case "Rh":			Z_number = 45			break		case "rhenium":			Z_number = 45			break		case "Ru":			Z_number = 44			break		case "ruthenium":			Z_number = 44			break					case "S":			Z_number = 16			break		case "sulfur":			Z_number = 16			break		case "Sb":			Z_number = 51			break		case "antimony":			Z_number = 51			break		case "Sc":			Z_number = 21			break		case "scandium":			Z_number = 21			break		case "Se":			Z_number = 34			break		case "selenium":			Z_number = 34			break		case "Si":			Z_number = 14			break		case "silicon":			Z_number = 14			break		case "Sn":			Z_number = 50			break		case "tin":			Z_number = 50			break		case "Sr":			Z_number = 38			break		case "strontium":			Z_number = 38			break					case "Ti":			Z_number = 22			break		case "titanium":			Z_number = 22			break		case "Tc":			Z_number = 43			break		case "tecnicium":			Z_number = 43			break		case "Te":			Z_number = 52			break		case "tellurium":			Z_number = 52			break		case "Th":			Z_number = 90			break		case "thorium":			Z_number = 90			break					case "X":	// Aggregate particles			Z_number = 999			break		case "Xe":			Z_number = 54			break		case "xenon":			Z_number = 54			break			case "U":			Z_number = 92			break		case "uranium":			Z_number = 92			break			case "V":			Z_number = 23			break		case "vanadium":			Z_number = 23			break					case "W":			Z_number = 74			break		case "tungsten":			Z_number = 74			break					case "Y":			Z_number = 39			break		case "yttrium":			Z_number = 39			break			case "Zn":			Z_number = 30			break		case "zinc":			Z_number = 30			break		case "Zr":			Z_number = 40			break		case "zircon":			Z_number = 40			break	endswitch		if ((Z_number==-1) && (PromptFlag == 1))		Z_number = PromptForUserVarInput(-1,"Cannot determine Z of "+TextLabel,"Please enter the atomic number of "+TextLabel)	endif		return Z_numberEndSTATIC Function /T ReturnTextBeforeNumber(LongString)	String LongString		String ShortString=""	Variable i=0, length=strlen(LongString)		if (length>0)		do			if (numtype(str2num(LongString[i,i])) == 0)				break			endif			ShortString += LongString[i,i]			i+=1		while(i<length)				if (strlen(ShortString) > 0)			return ShortString		else			// Return the full text if there is no number			return LongString		endif	else		return ""	endifEndSTATIC Function PromptForUserVarInput(DefaultVar,VarDescription,Msg)	Variable DefaultVar	String VarDescription, Msg		Variable InputVar=DefaultVar	Prompt InputVar, VarDescription		DoPrompt Msg, InputVar		if (V_flag)		return NAN	else		return InputVar	endifEnd// Returns the atomic mass for each elementFunction ZNumberToMass(Z)	Variable Z		if (Z == 1)		return 1.00794	elseif (Z == 2)		return 4.002602	elseif (Z == 3)		return 6.941	elseif (Z == 4)		return 9.012182	elseif (Z == 5)		return 10.811	elseif (Z == 6)		return 12.0107	elseif (Z == 7)		return 14.00674	elseif (Z == 8)		return 15.9994	elseif (Z == 9)		return 18.9984032	elseif (Z == 10)		return 20.1797	elseif (Z == 11)		return 22.98977	elseif (Z == 12)		return 24.3050	elseif (Z == 13)		return 26.981538	elseif (Z == 14)		return 28.0855	elseif (Z == 15)		return 30.973761	elseif (Z == 16)		return 32.066	elseif (Z == 17)		return 35.4527	elseif (Z == 18)		return 39.498	elseif (Z == 19)		return 39.0983	elseif (Z == 20)		return 40.078	elseif (Z == 21)		return 44.955910	elseif (Z == 22)		return 47.867	elseif (Z == 23)		return 50.9415	elseif (Z == 24)		return 51.9961	elseif (Z == 25)		return 54.938049	elseif (Z == 26)		return 55.845	elseif (Z == 27)		return 58.9332	elseif (Z == 28)		return 58.6934	elseif (Z == 29)		return 63.546	elseif (Z == 30)		return 65.39	elseif (Z == 31)		return 69.723	elseif (Z == 32)		return 72.61	elseif (Z == 33)		return 74.923	elseif (Z == 34)		return 78.96	elseif (Z == 35)		return 79.904	elseif (Z == 36)		return 83.8	elseif (Z == 37)		return 85.468	elseif (Z == 38)		return 87.62	elseif (Z == 39)		return 88.906	elseif (Z == 40)		return 91.224	elseif (Z == 41)		return 92.906	elseif (Z == 42)		return 95.94	elseif (Z == 43)		return 98	elseif (Z == 44)		return 101.07	elseif (Z == 45)		return 102.906	elseif (Z == 46)		return 106.42	elseif (Z == 47)		return 107.868	elseif (Z == 48)		return 112.41	elseif (Z == 49)		return 114.818	elseif (Z == 50)		return 118.71	elseif (Z == 51)		return 121.76	elseif (Z == 52)		return 127.60	elseif (Z == 53)		return 126.904	elseif (Z == 54)		return 131.29	elseif (Z == 55)		return 132.91	elseif (Z == 56)		return 137.33	elseif (Z == 57)		return 138.91	elseif (Z == 58)		return 140.116	elseif (Z == 59)		return 140.91	elseif (Z == 60)		return 144.24	elseif (Z == 61)		return 144.91	elseif (Z == 62)		return 150.36	elseif (Z == 63)		return 151.96	elseif (Z == 64)		return 157.25	elseif (Z == 65)		return 158.93	elseif (Z == 66)		return 162.50	elseif (Z == 67)		return 164.93	elseif (Z == 68)		return 167.26	elseif (Z == 69)		return 168.93	elseif (Z == 70)		return 168.93	elseif (Z == 71)		return 174.97	elseif (Z == 72)		return 178.49	elseif (Z == 73)		return 180.95	elseif (Z == 74)		return 183.84	elseif (Z == 75)		return 186.21	elseif (Z == 76)		return 190.23	elseif (Z == 77)		return 192.22	elseif (Z == 78)		return 195.08	elseif (Z == 79)		return 196.97	elseif (Z == 80)		return 200.59	elseif (Z == 81)		return 204.38	elseif (Z == 82)		return 207.2	elseif (Z == 83)		return 208.98	elseif (Z == 84)		return 208.98	elseif (Z == 85)		return 209.99	elseif (Z == 86)		return 222.02	elseif (Z == 87)		return 223.02	elseif (Z == 88)		return 226.03	elseif (Z == 89)		return 227.03	elseif (Z == 90)		return 232.04	elseif (Z == 91)		return 231.04	elseif (Z == 92)		return 238.03	elseif (Z == 93)		return 237.05	endif		if (Z > 90)		Print " *** Estimated mass only! for Z=",Z		return 2*Z	endifEnd// Return a guess of the formal oxidation state. Function ZNumberToProperty(Z,Choice,UserCharge)	Variable Z, Choice, UserCharge		String Atom	Variable Charge=0, BVr0=0		switch (abs(Z))	case 1:			//		Atom="H"		Charge=1		BVr0 	= 0.882		break	case 3:			//		Atom="Li"		Charge=1		break	case 8:			//		Atom="O"		Charge=-2		break	case 9:			//		Atom="F"		Charge=-1		break	case 11:		//		Atom="Na"		Charge=1		break	case 12:		//		Atom="Mg"		Charge=2		break	case 13:		//		Atom="Al"		Charge=3		break	case 14:		//		Atom="Si"		break	case 15:		//		Atom="P"		break	case 16:		//		Atom="S"		break	case 17:		//		Atom="Cl"		Charge=-1		break	case 18:		//		Atom="Ar"		break	case 19:		//		Atom="K"		Charge=1		break	case 20:		//		Atom="Ca"		Charge=2		break	case 21:		//		Atom="Sc"		Charge=3		break	case 22:		//		Atom="Ti"		Charge=4		break	case 23:		//		Atom="V"		break	case 24:		//		Atom="Cr"		break	case 25:		//		Atom="Mn"		break	case 26:		//		Atom="Fe"		Charge 	= (UserCharge == 0) ? 3 : UserCharge		if (Charge == 3)			BVr0 	= 1.7606 		// Taken from Michel et al., PNAS SI			BVr0 	= 1.759 		// Taken from O'Keeffe		elseif (Charge == 2)			BVr0 	= 1.734		// Taken from Brown & Altermatt		endif		break	case 27: 		//		Atom="Co"		break	case 28:		//		Atom="Ni"		break	case 29:		//		Atom="Cu"		Charge=1		break	case 30:		//		Atom="Zn"		Charge=1		break	case 31:		//		Atom="Ga"		break	case 32:		//		Atom="Ge"		break	case 33:		//		Atom="As"		break	case 34:		//		Atom="Se"		break	case 35:		//		Atom="Br"		Charge=-1		break	case 36:		Atom="Kr"		break	case 37:		Atom="Rb"		break	case 38:		Atom="Sr"		break	case 39:		Atom="Y"		break	case 40:		Atom="Zr"		break	case 41:		Atom="Nb"		break	case 42:		Atom="Mo"		break	case 43:		Atom="Tc"		break	case 44:		Atom="Ru"		break	case 45:		Atom="Rh"		break	case 46:		Atom="Pd"		break	case 47:		Atom="Ag"		break	case 48:		Atom="Cd"		break	case 49:		Atom="In"		break	case 50:		Atom="Sn"		break	case 51:		Atom="Sb"		break	case 52:		Atom="Te"		break	case 53:		Atom="I"		break	case 54:		Charge = 0		Atom="Xe"		break			case 58:		Atom="Ce"		break			case 74:		Atom="W"		break			case 80:		Atom="Hg"		break			case 999:		Atom="X"		break			default:		Charge=0	endswitch		if (Choice == 1)		return Charge	elseif (Choice == 2)		return BVr0	endifEnd//Function AppendAtomColorToGizmo(Z)//	Variable Z//	//	String cmd, colorName//	//	switch(Z)	// numeric switch//		case 1://			cmd = "AppendToGizmo attribute color={0.7,0.7,1,1},name=H_color"//			break//		case 6://			cmd = "AppendToGizmo attribute color={0.2,1,0.2,1},name=C_color"//			break//		case 7://			cmd = "AppendToGizmo attribute color={0.8,0.8,0,1},name=N_color"//			break//		case 8://			cmd = "AppendToGizmo attribute color={0,0,1,1},name=O_color"//			break//		case 26://			cmd = "AppendToGizmo attribute color={.800,0.267,0,1},name=Fe_color"//			break//		case 999://			cmd = "AppendToGizmo attribute color={.800,0.267,0,1},name=X_color"//			break//		default://			colorName = ZNumberToAtom(Z) + "_color"//			cmd = "AppendToGizmo attribute color={0,0,1,1},name=" + colorName//	endswitch//	//	Execute cmd//End//Function SetAtomicRadius(ObjectName,Z,Scale)//	String ObjectName//	Variable Z, Scale//	//	NVAR gParticleRadius		=root:StrucSims:FRACTALS:gParticleRadius//	//	String cmd//	String /G gObjectName = ObjectName//	//	switch(Z)	// numeric switch//		case 1://			cmd = "ModifyGizmo ModifyObject=$gObjectName property={ size,"+num2str(1.2/Scale)+"}"//			break//		case 6://			cmd = "ModifyGizmo ModifyObject=$gObjectName property={ size,"+num2str(2/Scale)+"}"//			break//		case 7://			cmd = "ModifyGizmo ModifyObject=$gObjectName property={ size,"+num2str(2/Scale)+"}"//			break//		case 8://			cmd = "ModifyGizmo ModifyObject=$gObjectName property={ size,"+num2str(2/Scale)+"}"//			break//			//		case 999://			// Aggregates - but we should no longer be doing this. //				Print " Setting default aggregate particle size"//				cmd = "ModifyGizmo ModifyObject=$gObjectName property={ size,"+num2str(10.5*gParticleRadius/Scale)+"}"//			break//			//		default://			cmd = "ModifyGizmo ModifyObject=$gObjectName property={ size,"+num2str(2/Scale)+"}"//	endswitch//	//	Execute cmd//	KillStrings /Z gObjectName//End